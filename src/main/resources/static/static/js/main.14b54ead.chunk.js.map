{"version":3,"sources":["pages/CreateDeck.module.css","components/Decks/ShowDeck.module.css","components/Cards/AddSingleCard.module.css","pages/UserPage.module.css","pages/Register.module.css","components/Cards/UploadCards.module.css","pages/Search.module.css","pages/Login.module.css","pages/Landing.module.css","components/Cards/SearchResult.module.css","components/Learning/DeckDetails.module.css","components/Header.module.css","pages/AddCard.module.css","components/UI/LoadingSpinner.module.css","components/Learning/RateAnswer.module.css","components/Learning/CardDetails.module.css","pages/Decks.module.css","pages/exception/NotFound.module.css","components/AppInfo.module.css","store/deck-slice.js","store/card-slice.js","store/error-slice.js","store/loading-slice.js","store/security-slice.js","store/index.js","components/AppInfo.js","pages/title/ChangeTitle.js","pages/Landing.js","actions/userActions.js","components/Header.js","components/Layouts/Layout.js","components/Cards/DeckSelect.js","components/Cards/AddSingleCard.js","actions/cardActions.js","components/Cards/UploadCards.js","components/UI/LoadingSpinner.js","pages/AddCard.js","components/Decks/ShowDeck.js","actions/deckActions.js","pages/Decks.js","components/Cards/SearchResult.js","pages/Search.js","pages/UserPage.js","components/Learning/CardDetails.js","components/Learning/DeckDetails.js","components/Learning/RateAnswer.js","pages/Learning.js","pages/Login.js","pages/Register.js","pages/CreateDeck.js","pages/UpdateDeck.js","components/Security/SecuredRoute.js","pages/exception/NotFound.js","App.js","components/Layouts/ScrollToTop.js","index.js"],"names":["module","exports","deckSlice","createSlice","name","initialState","decks","reducers","addDeck","state","action","push","payload","updateDeck","theDeck","index","findIndex","deck","id","replaceDeck","deleteDeck","filter","deckActions","actions","cardSlice","cards","addCard","updateCard","theCard","card","replaceCards","deleteCard","cardActions","errorSlice","errors","setError","errorActions","loadingSlice","status","setStatus","loadingActions","securitySlice","user","validToken","notification","setUser","setNotification","securityActions","store","configureStore","reducer","error","loading","security","AppInfo","props","className","classes","title","description","ChangeTitle","useEffect","document","Landing","appInfo","using","try","to","link","urlPrefix","register","dispatch","history","fetch","method","body","JSON","stringify","headers","response","ok","text","then","Error","parse","message","setTimeout","login","json","token","localStorage","setItem","decoded","jwt_decode","logout","removeItem","updateUser","Header","useDispatch","loggedIn","useSelector","loggedUser","header","left","links","right","username","onClick","window","location","href","Layout","children","DeckSelect","forwardRef","ref","existingDeckId","selectValueRef","useRef","existingCard","theDeckId","deckOptions","getSelectValue","current","value","map","deckName","length","substring","useImperativeHandle","selected","disabled","hidden","AddSingleCard","dueDateInformation","deckError","frontError","backError","deckSelectRef","frontRef","backRef","useHistory","Date","dueDate","currentCard","cardStatus","date","d","month","getMonth","day","getDate","year","getFullYear","join","formatDate","clear","modifyClear","front","back","pathname","onSubmit","e","preventDefault","selectedDeckId","trim","createCard","type","placeholder","deckId","Authorization","getItem","newCard","uploadFile","formData","i","getSingleCard","cardId","data","updateExistingCard","updateLearnedCard","difficulty","search","searchPattern","learning","learningCardNumbers","confirm","UploadCards","fileError","actualBtn","fileChosenRef","useState","selectedFileName","setSelectedFileName","theFile","setTheFile","uploadDeckError","resetError","setErrorMessage","FormData","append","res","setResponseMessage","onChange","fileName","target","files","beginning","end","concat","accept","htmlFor","LoadingSpinner","size","centerClasses","center","ringClasses","ring","spanClasses","style","margin","AddCard","showMessage","setShowMessage","setMessage","setClear","showUploadMessage","setShowUploadMessage","uploadMessage","setUploadMessage","setExistingCard","useParams","listen","hasDeck","updatedCard","result","ShowDeck","setCards","doneForTheDay","setDoneForTheDay","noCards","newCards","dailyCards","ret","totalCards","pointerEvents","operations","add","rename","bind","delete","createDeck","toUpdate","newDeck","getDecks","getSingleDeck","Decks","noDecks","removeDeck","displayDecks","completedCardsForTheDay","reviewCards","SearchResult","copyToClipboardHandler","isFront","navigator","clipboard","writeText","displayCopyMessage","copy","modify","Search","showCopyMessage","setShowCopyMessage","setDisabled","inputRef","selectRef","removeCard","resultCards","top","UserPage","userNameError","passwordError","confirmPasswordError","notificationMessage","usernameRef","passwordRef","confirmPasswordRef","password","confirmPassword","newUser","CardDetails","showAnswer","setShowAnswer","showBack","showRating","DeckDetails","new","inProgressCards","review","formatDays","days","suffix","parseFloat","toFixed","RateAnswer","hardReviewDays","hardReview","mediumReviewDays","mediumReview","easyReviewDays","easyReview","calculateNewTimeHandler","hideRating","sendLearnedCard","again","hard","medium","easy","helper","Learning","params","setShowRating","replace","currentDeck","find","console","log","cardToShow","Login","Register","CreateDeck","nameRef","cardNumberRef","cardNumber","setCardNumber","UpdateDeck","setName","existingDeck","setExistingDeck","getDeck","SecuredRoute","path","NotFound","wrapper","App","jwtToken","decoded_jwtToken","currentTime","now","exp","exact","ScrollToTop","useLocation","scrollTo","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.14b54ead.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"deck-form\":\"CreateDeck_deck-form__1QrBZ\",\"deck-creation\":\"CreateDeck_deck-creation__2lrY-\",\"input-group\":\"CreateDeck_input-group__2BJsd\",\"left\":\"CreateDeck_left__3gAjp\",\"right\":\"CreateDeck_right__QNoIN\",\"message\":\"CreateDeck_message__2GvJh\",\"error\":\"CreateDeck_error__28me7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deck\":\"ShowDeck_deck__15BEK\",\"deck-grid\":\"ShowDeck_deck-grid__3Kg2c\",\"deck-grid-left\":\"ShowDeck_deck-grid-left__1Xjym\",\"deck-grid-right\":\"ShowDeck_deck-grid-right__231Cw\",\"deck-name\":\"ShowDeck_deck-name__3QXzn\",\"new-cards\":\"ShowDeck_new-cards__24CfT\",\"review-cards\":\"ShowDeck_review-cards__2XS8R\",\"total-cards\":\"ShowDeck_total-cards__3DJj9\",\"operations\":\"ShowDeck_operations__3rf8j\",\"disabled\":\"ShowDeck_disabled__2PhR4\",\"add\":\"ShowDeck_add__92WX_\",\"rename\":\"ShowDeck_rename__1vPY3\",\"delete\":\"ShowDeck_delete__e9N8w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"AddSingleCard_title__Aj8YU\",\"add-form\":\"AddSingleCard_add-form__tTP3o\",\"input-group\":\"AddSingleCard_input-group__rmqNn\",\"message\":\"AddSingleCard_message__1CkKO\",\"error-message\":\"AddSingleCard_error-message__3C1pI\",\"error\":\"AddSingleCard_error__2Gd9U\",\"due-info\":\"AddSingleCard_due-info__1lpmb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"UserPage_title__3SN9L\",\"user-form\":\"UserPage_user-form__2-wPR\",\"input-group\":\"UserPage_input-group__3dFSl\",\"card-number-input\":\"UserPage_card-number-input__3lvOj\",\"message\":\"UserPage_message__1CCeB\",\"notification\":\"UserPage_notification__3-F5K\",\"error\":\"UserPage_error__VvfDk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Register_title__3YmLo\",\"register-form\":\"Register_register-form__2JHSs\",\"input-group\":\"Register_input-group__BytCA\",\"header\":\"Register_header__3SqHd\",\"message\":\"Register_message__2mM8B\",\"error\":\"Register_error__12BbL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"UploadCards_title__1XX7n\",\"upload-info\":\"UploadCards_upload-info__pyItd\",\"upload-form\":\"UploadCards_upload-form__1fmf3\",\"input-group\":\"UploadCards_input-group__39XUV\",\"file-chosen\":\"UploadCards_file-chosen____gVt\",\"message\":\"UploadCards_message__1u4_z\",\"error-message\":\"UploadCards_error-message__3goSr\",\"error\":\"UploadCards_error__1HTdE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"top\":\"Search_top__2oNa7\",\"search\":\"Search_search__31nM0\",\"search-result\":\"Search_search-result__3RFda\",\"no-search-result\":\"Search_no-search-result__1VLWR\",\"copy-message\":\"Search_copy-message__1t7wH\",\"copy\":\"Search_copy__3xw-U\",\"disabled\":\"Search_disabled__2nK1u\",\"notification\":\"Search_notification__YYAdm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Login_title__1Kau8\",\"login-form\":\"Login_login-form__Kvex9\",\"input-group\":\"Login_input-group__2VWqP\",\"header\":\"Login_header__2OgH6\",\"message\":\"Login_message__2L3LG\",\"error\":\"Login_error__zt5n1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info-grid\":\"Landing_info-grid__2CzNc\",\"grid-left\":\"Landing_grid-left__3zruv\",\"app-name\":\"Landing_app-name__3whUo\",\"grid-right\":\"Landing_grid-right__aopM4\",\"using\":\"Landing_using__2XqA0\",\"try\":\"Landing_try__2UU0L\",\"link\":\"Landing_link__24vGY\",\"header\":\"Landing_header__1GFY0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"SearchResult_card__2WE5P\",\"number-of-result\":\"SearchResult_number-of-result__3w_N2\",\"copy\":\"SearchResult_copy__3e0pg\",\"modify\":\"SearchResult_modify__3rB0l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info-grid\":\"DeckDetails_info-grid__2jpme\",\"deck-name\":\"DeckDetails_deck-name__1kuet\",\"edit-card\":\"DeckDetails_edit-card__37PFj\",\"card-details\":\"DeckDetails_card-details__2Axnu\",\"new\":\"DeckDetails_new__BcjuR\",\"learning\":\"DeckDetails_learning__29TuR\",\"review\":\"DeckDetails_review__2PYQJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__n8-PS\",\"left\":\"Header_left__3BXbi\",\"app-name\":\"Header_app-name__2gVH9\",\"links\":\"Header_links__34S6g\",\"right\":\"Header_right__1fwuU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"no-deck-found\":\"AddCard_no-deck-found__2wnfn\",\"create-deck\":\"AddCard_create-deck__lGnpA\",\"message\":\"AddCard_message__i3eUT\",\"success\":\"AddCard_success__1k2i1\",\"error\":\"AddCard_error__2WMM9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"LoadingSpinner_center__oHzHH\",\"center-small\":\"LoadingSpinner_center-small__35cSS\",\"center-medium\":\"LoadingSpinner_center-medium__Go9xB\",\"center-large\":\"LoadingSpinner_center-large__mJWW9\",\"ring\":\"LoadingSpinner_ring__3jMho\",\"ring-small\":\"LoadingSpinner_ring-small__2n0VB\",\"ring-medium\":\"LoadingSpinner_ring-medium__3y78p\",\"ring-large\":\"LoadingSpinner_ring-large__2sOD3\",\"text\":\"LoadingSpinner_text__3vZLW\",\"text-medium\":\"LoadingSpinner_text-medium__d0YV3\",\"text-large\":\"LoadingSpinner_text-large__hdWeb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rate-answer\":\"RateAnswer_rate-answer__1aUEI\",\"again\":\"RateAnswer_again__3Tfnd\",\"hard\":\"RateAnswer_hard__qNyWF\",\"medium\":\"RateAnswer_medium__1hHOD\",\"easy\":\"RateAnswer_easy__zm4H8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"CardDetails_card__2YMju\",\"show-answer\":\"CardDetails_show-answer__3XnQa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"decks\":\"Decks_decks__hujXo\",\"create-deck\":\"Decks_create-deck__2Lnqc\",\"no-deck-found\":\"Decks_no-deck-found__giVGw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"NotFound_wrapper__34NuA\",\"status\":\"NotFound_status__2yNlW\",\"text\":\"NotFound_text__33tDf\",\"change-color\":\"NotFound_change-color__zq9hf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app-info\":\"AppInfo_app-info__1S9wd\"};","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst deckSlice = createSlice({\r\n  name: \"deck\",\r\n  initialState: {\r\n    decks: [],\r\n  },\r\n  reducers: {\r\n    addDeck(state, action) {\r\n      state.decks.push(action.payload);\r\n    },\r\n    updateDeck(state, action){\r\n      const theDeck = action.payload;\r\n      const index = state.decks.findIndex(deck => deck.id === theDeck.id)\r\n      state.decks[index] = theDeck;\r\n    },\r\n    replaceDeck(state, action) {\r\n      state.decks = action.payload;\r\n    },\r\n    deleteDeck(state, action) {\r\n      state.decks = state.decks.filter((deck) => deck.id !== action.payload);\r\n    },\r\n  },\r\n});\r\n\r\nexport const deckActions = deckSlice.actions;\r\nexport default deckSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { current } from \"@reduxjs/toolkit\";\r\n\r\nconst cardSlice = createSlice({\r\n  name: \"card\",\r\n  initialState: {\r\n    cards: []\r\n  },\r\n  reducers: {\r\n    addCard(state, action) {\r\n      state.cards.push(action.payload);\r\n    },\r\n    updateCard(state, action){\r\n      const theCard = action.payload;\r\n      const index = state.cards.findIndex(card => card.id === theCard.id)\r\n      state.cards[index] = theCard;\r\n    },\r\n    replaceCards(state, action){\r\n      state.cards = action.payload\r\n    },\r\n    deleteCard(state, action) {\r\n      state.cards.filter(card => card.id !== action.payload)\r\n    },\r\n  },\r\n});\r\n\r\nexport const cardActions = cardSlice.actions;\r\nexport default cardSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst errorSlice = createSlice({\r\n  name: \"error\",\r\n  initialState: {\r\n    errors: null,\r\n  },\r\n  reducers: {\r\n    setError(state, action) {\r\n      state.errors = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const errorActions = errorSlice.actions;\r\nexport default errorSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst loadingSlice = createSlice({\r\n  name: \"loading\",\r\n  initialState: {\r\n    status: \"\",\r\n  },\r\n  reducers: {\r\n    setStatus(state, action) {\r\n      state.status = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const loadingActions = loadingSlice.actions;\r\nexport default loadingSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst checkTokenValidity = (payload) => {\r\n  \r\n  return payload ? true : false;\r\n};\r\n\r\nconst securitySlice = createSlice({\r\n  name: \"security\",\r\n  initialState: {\r\n    user: {},\r\n    validToken: false,\r\n    notification: null\r\n  },\r\n  reducers: {\r\n    setUser(state, action) {\r\n      state.validToken = checkTokenValidity(action.payload);\r\n      state.user = action.payload;\r\n    },\r\n    setNotification(state, action){\r\n      state.notification = action.payload;\r\n    }\r\n  },\r\n});\r\n\r\nexport const securityActions = securitySlice.actions;\r\nexport default securitySlice;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport deckSlice from \"./deck-slice\";\r\nimport cardSlice from \"./card-slice\";\r\nimport errorSlice from \"./error-slice\";\r\nimport loadingSlice from \"./loading-slice\";\r\nimport securitySlice from \"./security-slice\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    deck: deckSlice.reducer,\r\n    card: cardSlice.reducer,\r\n    error: errorSlice.reducer,\r\n    loading: loadingSlice.reducer,\r\n    security: securitySlice.reducer\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import classes from \"./AppInfo.module.css\";\r\n\r\nconst AppInfo = (props) => {\r\n  return (\r\n    <div className={classes[\"app-info\"]}>\r\n      <i className=\"fa-solid fa-circle-check\"></i>\r\n      <p>{props.title}</p>\r\n      <p>{props.description}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppInfo;\r\n","import { useEffect } from \"react\"\r\n\r\nconst ChangeTitle = (props) => {\r\n    useEffect(() => {\r\n        document.title = props.title;\r\n    })\r\n\r\n    return <></>\r\n}\r\n\r\nexport default ChangeTitle;","import { Fragment } from \"react\";\r\nimport AppInfo from \"../components/AppInfo\";\r\nimport classes from \"./Landing.module.css\";\r\n// import img from \"../img/landing-img.jpg\"\r\nimport { Link } from \"react-router-dom\";\r\nimport ChangeTitle from \"./title/ChangeTitle\";\r\n\r\nconst Landing = () => {\r\n  const appInfo = (\r\n    <div>\r\n      <AppInfo\r\n        title={\"Efficient and highly effective\"}\r\n        description={\r\n          \"By using it regularly you will definitely see impressive results even after a couple of months.\"\r\n        }\r\n      />\r\n      <AppInfo\r\n        title={\"Completely personalized\"}\r\n        description={\r\n          \"You are able to create your own decks and add your own cards. This enables you to learn from materials that interests you. \"\r\n        }\r\n      />\r\n      <AppInfo\r\n        title={\"It is a fun way of learning and keeps you motivated\"}\r\n        description={\r\n          \"The fact that you can use your own cards makes learning more interesting, and the results you will experience will give you a motivation boost to continue.\"\r\n        }\r\n      />\r\n      <AppInfo\r\n        title={\"It can be used anywhere\"}\r\n        description={\r\n          \"You are able to learn anywhere and anytime as long as you have a stable internet connection. \"\r\n        }\r\n      />\r\n      <AppInfo\r\n        title={\"Easy and free to use\"}\r\n        description={\r\n          \"The application is really easy to use, after registration you can start creating your decks. We won't charge you any costs, and the app will continue to be free in the future. \"\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      <ChangeTitle title=\"Main Page\" />\r\n      <h1 className={classes[\"app-name\"]}>FlashCard</h1>\r\n      <h2>The most effective way of learning</h2>\r\n\r\n      <div className={classes[\"info-grid\"]}>\r\n        <div className={classes[\"grid-left\"]}></div>\r\n        <div className={classes[\"grid-right\"]}>\r\n          <h2 className={classes.using}>Why to use it?</h2>\r\n          {appInfo}\r\n        </div>\r\n      </div>\r\n\r\n      <div className={classes.try}>\r\n        <Link to=\"/register\" className={classes.link}>\r\n          I want to try it\r\n        </Link>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import { errorActions } from \"../store/error-slice\";\r\nimport { securityActions } from \"../store/security-slice\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nconst urlPrefix = \"https://springflashcardapp.herokuapp.com\";\r\n\r\nexport const register = async (user, dispatch, history) => {\r\n  try {\r\n    const response = await fetch(`${urlPrefix}/api/users/register`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(user),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      return await response.text().then((text) => {\r\n        throw new Error(text);\r\n      });\r\n    }\r\n    history.push(\"/login\");\r\n    dispatch(errorActions.setError(null));\r\n  } catch (err) {\r\n    dispatch(errorActions.setError(JSON.parse(err.message)));\r\n\r\n    setTimeout(() => {\r\n      dispatch(errorActions.setError(null));\r\n    }, 3000);\r\n  }\r\n};\r\n\r\nexport const login = async (user, dispatch, history) => {\r\n  try {\r\n    const response = await fetch(`${urlPrefix}/api/users/login`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(user),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      return await response.text().then((text) => {\r\n        throw new Error(text);\r\n      });\r\n    }\r\n\r\n    const { token } = await response.json();\r\n\r\n    localStorage.setItem(\"jwtToken\", token);\r\n\r\n    const decoded = jwt_decode(token);\r\n\r\n    dispatch(securityActions.setUser(decoded));\r\n\r\n    history.push(\"/\");\r\n    dispatch(errorActions.setError(null));\r\n  } catch (err) {\r\n    dispatch(errorActions.setError(JSON.parse(err.message)));\r\n\r\n    setTimeout(() => {\r\n      dispatch(errorActions.setError(null));\r\n    }, 3000);\r\n  }\r\n};\r\n\r\nexport const logout = (dispatch) => {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  dispatch(securityActions.setUser());\r\n};\r\n\r\nexport const updateUser = async (user, dispatch) => {\r\n  try {\r\n    const response = await fetch(`${urlPrefix}/api/users`, {\r\n      method: \"PATCH\",\r\n      body: JSON.stringify(user),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      return await response.text().then((text) => {\r\n        throw new Error(text);\r\n      });\r\n    }\r\n\r\n    dispatch(errorActions.setError(null));\r\n    dispatch(securityActions.setUser);\r\n    dispatch(securityActions.setNotification(\"Successfully changed. Next time you can use your new credentials to log in.\"))\r\n    \r\n    setTimeout(() => {\r\n      dispatch(securityActions.setNotification())\r\n    }, 3000)\r\n  } catch (err) {\r\n    dispatch(errorActions.setError(JSON.parse(err.message)));\r\n\r\n    setTimeout(() => {\r\n      dispatch(errorActions.setError(null));\r\n    }, 3000);\r\n  }\r\n};\r\n","import { Fragment, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classes from \"./Header.module.css\";\r\nimport { logout } from \"../actions/userActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const loggedIn = useSelector((state) => state.security.validToken);\r\n  const loggedUser = useSelector((state) => state.security.user);\r\n\r\n  const loggingOut = () => {\r\n    logout(dispatch);\r\n    window.location.href = \"/\";\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <header className={classes.header}>\r\n        <div className={classes.left}>\r\n          <Link to=\"/\" className={classes[\"app-name\"]}>\r\n            FlashCard\r\n          </Link>\r\n\r\n          {loggedIn && (\r\n            <div className={classes.links}>\r\n              <Link to=\"/decks\">Decks</Link>\r\n              <Link to=\"/createDeck\">Create Deck</Link>\r\n              <Link to=\"/search\">Search</Link>\r\n              <Link to=\"/addCard\">Add card</Link>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {loggedIn && (\r\n          <div className={classes.right}>\r\n            <Link to=\"/user\">{loggedUser.username}</Link>\r\n            <Link to=\"/\" onClick={loggingOut}>\r\n              Logout\r\n            </Link>\r\n          </div>\r\n        )}\r\n\r\n        {!loggedIn && (\r\n          <div className={classes.right}>\r\n            <Link to=\"/register\">Sign Up</Link>\r\n          <Link to=\"/login\">Login</Link>\r\n          </div>\r\n        )}\r\n      </header>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { Fragment } from \"react\";\r\nimport Header from \"../Header\";\r\n\r\nconst Layout = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <Header />\r\n      <div>{props.children}</div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useRef } from \"react\";\r\nimport { forwardRef, useImperativeHandle } from \"react\";\r\n\r\nconst DeckSelect = forwardRef((props, ref) => {\r\n  const selectValueRef = useRef();\r\n\r\n  let existingDeckId;\r\n\r\n  if (props.existingCard) {\r\n    existingDeckId = props.existingCard.theDeckId;\r\n  }\r\n\r\n  const getSelectValue = () => {\r\n    return selectValueRef.current.value;\r\n  };\r\n\r\n  const decks = useSelector((state) => state.deck.decks);\r\n\r\n  let deckOptions;\r\n\r\n  if (existingDeckId) {\r\n    const theDeck = decks.filter((deck) => deck.id === existingDeckId);\r\n\r\n    deckOptions = theDeck.map((deck) => (\r\n      <option value={deck.id} key={deck.id}>\r\n        {deck.deckName.length > 45\r\n          ? deck.deckName.substring(0, 42) + \"...\"\r\n          : deck.deckName}\r\n      </option>\r\n    ));\r\n  } else {\r\n    deckOptions = decks.map((deck) => (\r\n      <option value={deck.id} key={deck.id}>\r\n        {deck.deckName.length > 45\r\n          ? deck.deckName.substring(0, 42) + \"...\"\r\n          : deck.deckName}\r\n      </option>\r\n    ));\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      value: getSelectValue,\r\n    };\r\n  });\r\n\r\n  return (\r\n    <select name=\"\" id=\"\" ref={selectValueRef}>\r\n      {!existingDeckId && (\r\n        <option value=\"not-selected\" selected disabled hidden>\r\n          Select deck\r\n        </option>\r\n      )}\r\n      {deckOptions}\r\n    </select>\r\n  );\r\n});\r\n\r\nexport default DeckSelect;\r\n","import { Fragment, useEffect, useState } from \"react\";\r\nimport DeckSelect from \"./DeckSelect\";\r\nimport { useRef } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { errorActions } from \"../../store/error-slice\";\r\n\r\nimport classes from \"./AddSingleCard.module.css\";\r\n\r\nconst formatDate = (date) => {\r\n  var d = new Date(date),\r\n    month = \"\" + (d.getMonth() + 1), //Indexes are from 0 (so 0 = january)\r\n    day = \"\" + d.getDate(),\r\n    year = d.getFullYear();\r\n\r\n  //From january to september\r\n  if (month.length < 2) month = \"0\" + month;\r\n\r\n  //from day 01 - 09\r\n  if (day.length < 2) day = \"0\" + day;\r\n\r\n  return [year, month, day].join(\".\");\r\n};\r\n\r\nconst AddSingleCard = (props) => {\r\n  const deckSelectRef = useRef();\r\n  const frontRef = useRef();\r\n  const backRef = useRef();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const errors = useSelector((state) => state.error.errors);\r\n\r\n  let dueDateInformation;\r\n\r\n  let deckError;\r\n  let frontError;\r\n  let backError;\r\n\r\n  if (props.existingCard) {\r\n    const date = new Date(props.existingCard.dueDate);\r\n    const currentCard = props.existingCard;\r\n    dueDateInformation = currentCard.cardStatus === 0 ? \"Card is not yet learned.\" : `Card is due on: ${formatDate(currentCard.dueDate)}`;\r\n  }\r\n\r\n  if (props.clear) {\r\n    frontRef.current.value = \"\";\r\n    backRef.current.value = \"\";\r\n\r\n    props.modifyClear();\r\n  }\r\n\r\n  if (errors) {\r\n    if (errors.deckError && !errors.front && !errors.back) {\r\n      deckError = <p className={classes.message}>{errors.deckError}</p>;\r\n    }\r\n\r\n    if (errors.front) {\r\n      frontError = (\r\n        <p className={`${classes.message} ${classes[\"error-message\"]}`}>\r\n          {errors.front}\r\n        </p>\r\n      );\r\n    }\r\n\r\n    if (errors.back) {\r\n      backError = (\r\n        <p className={`${classes.message} ${classes[\"error-message\"]}`}>\r\n          {errors.back}\r\n        </p>\r\n      );\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.existingCard && frontRef && backRef) {\r\n      frontRef.current.value = props.existingCard.front;\r\n      backRef.current.value = props.existingCard.back;\r\n    }\r\n  }, [props.existingCard]);\r\n\r\n  useEffect(() => {\r\n    frontRef.current.value = \"\";\r\n    backRef.current.value = \"\";\r\n  }, [history.location.pathname]);\r\n\r\n  const createCardSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const selectedDeckId = deckSelectRef.current.value();\r\n\r\n    if (selectedDeckId === \"not-selected\") {\r\n      dispatch(\r\n        errorActions.setError({\r\n          deckError: \"Deck must be selected\",\r\n        })\r\n      );\r\n\r\n      setTimeout(() => {\r\n        dispatch(errorActions.setError(null));\r\n      }, 3000);\r\n    } else {\r\n      dispatch(errorActions.setError(null));\r\n\r\n      const card = {\r\n        front: frontRef.current.value.trim(),\r\n        back: backRef.current.value.trim(),\r\n      };\r\n\r\n      props.createCard(selectedDeckId, card);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className={classes.title}>{props.title}</h1>\r\n      <form onSubmit={createCardSubmitHandler} className={classes[\"add-form\"]}>\r\n        {deckError && deckError}\r\n        <DeckSelect ref={deckSelectRef} existingCard={props.existingCard} />\r\n\r\n        {frontError && frontError}\r\n        <div className={classes[\"input-group\"]}>\r\n          <input\r\n            ref={frontRef}\r\n            type=\"text\"\r\n            name=\"\"\r\n            placeholder=\"Front\"\r\n            className={frontError ? classes.error : \"\"}\r\n          />\r\n        </div>\r\n\r\n        {backError && backError}\r\n        <div className={classes[\"input-group\"]}>\r\n          <input\r\n            ref={backRef}\r\n            type=\"text\"\r\n            name=\"\"\r\n            placeholder=\"Back\"\r\n            className={backError ? classes.error : \"\"}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Add card</button>\r\n      </form>\r\n\r\n    {dueDateInformation && <p className={classes[\"due-info\"]}>{dueDateInformation}</p>}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AddSingleCard;\r\n","import { cardActions } from \"../store/card-slice\";\r\nimport { errorActions } from \"../store/error-slice\";\r\nimport { loadingActions } from \"../store/loading-slice\";\r\n\r\nconst urlPrefix = \"https://springflashcardapp.herokuapp.com\";\r\n\r\nexport const createCard = async (deckId, card, dispatch) => {\r\n  try {\r\n    const response = await fetch(`${urlPrefix}/api/${deckId}/cards`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(card),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: localStorage.getItem(\"jwtToken\"),\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      return await response.text().then((text) => {\r\n        throw new Error(text);\r\n      });\r\n    }\r\n\r\n    //Not adding the card parameter, because at that point it does not have an id\r\n    const newCard = await response.json();\r\n\r\n    dispatch(cardActions.addCard(newCard));\r\n    dispatch(errorActions.setError(null));\r\n  } catch (err) {\r\n    dispatch(errorActions.setError(JSON.parse(err.message)));\r\n\r\n    setTimeout(() => {\r\n      dispatch(errorActions.setError(null));\r\n    }, 3000);\r\n\r\n    //This will indicate that in the component we don't want to show success message\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const uploadFile = async (deckId, formData, dispatch) => {\r\n  dispatch(loadingActions.setStatus(\"pending\"));\r\n  try {\r\n    const response = await fetch(`${urlPrefix}/api/${deckId}/upload`, {\r\n      method: \"POST\",\r\n      body: formData,\r\n      headers: {\r\n        Authorization: localStorage.getItem(\"jwtToken\"),\r\n      },\r\n    });\r\n\r\n    const cards = await response.json();\r\n\r\n    for (let i = 0; i < cards.length; i++) {\r\n      dispatch(cardActions.addCard(cards[i]));\r\n    }\r\n\r\n    dispatch(loadingActions.setStatus(\"completed\"));\r\n\r\n    return `${cards.length} Cards Successfully Added`;\r\n  } catch (err) {\r\n    dispatch(loadingActions.setStatus(\"completed\"));\r\n  }\r\n};\r\n\r\nexport const getSingleCard = async (cardId) => {\r\n  const response = await fetch(`${urlPrefix}/api/cards/${cardId}`, {\r\n    headers: {\r\n      Authorization: localStorage.getItem(\"jwtToken\"),\r\n    },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error(\"Coult not fetch\");\r\n  }\r\n\r\n  const data = await response.json();\r\n\r\n  return data;\r\n};\r\n\r\nexport const updateExistingCard = async (card, dispatch, history) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${urlPrefix}/api/${card.theDeckId}/cards/${card.id}`,\r\n      {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(card),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: localStorage.getItem(\"jwtToken\"),\r\n        },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      return await response.text().then((text) => {\r\n        throw new Error(text);\r\n      });\r\n    }\r\n\r\n    //Not adding the card parameter, because at that point it does not have an id\r\n    const newCard = await response.json();\r\n\r\n    dispatch(cardActions.updateCard(newCard));\r\n    dispatch(errorActions.setError(null));\r\n\r\n    history.push(\"/decks\");\r\n  } catch (err) {\r\n    dispatch(errorActions.setError(JSON.parse(err.message)));\r\n\r\n    setTimeout(() => {\r\n      dispatch(errorActions.setError(null));\r\n    }, 3000);\r\n  }\r\n};\r\n\r\nexport const updateLearnedCard = async (card, dispatch, difficulty) => {\r\n\r\n  try {\r\n    const response = await fetch(\r\n      `${urlPrefix}/api/${card.theDeckId}/${card.id}/learned/${difficulty}`,\r\n      {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(card),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: localStorage.getItem(\"jwtToken\"),\r\n        },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      return await response.text().then((text) => {\r\n        throw new Error(text);\r\n      });\r\n    }\r\n\r\n    //Not adding the card parameter, because at that point it does not have an id\r\n    const newCard = await response.json();\r\n\r\n    dispatch(cardActions.updateCard(newCard));\r\n    dispatch(errorActions.setError(null));\r\n  } catch (err) {\r\n    dispatch(errorActions.setError(JSON.parse(err.message)));\r\n\r\n    setTimeout(() => {\r\n      dispatch(errorActions.setError(null));\r\n    }, 3000);\r\n  }\r\n};\r\n\r\n\r\nexport const search = async (deckId, searchPattern, dispatch) => {\r\n  dispatch(loadingActions.setStatus(\"pending\"));\r\n  if (!searchPattern) {\r\n    searchPattern = \"empty-search\";\r\n  }\r\n\r\n  const response = await fetch(\r\n    `${urlPrefix}/api/${deckId}/cards/${searchPattern}/all`, {\r\n      headers: {\r\n        \"Authorization\": localStorage.getItem(\"jwtToken\")\r\n      },\r\n    }\r\n  );\r\n\r\n  const data = await response.json();\r\n\r\n  dispatch(loadingActions.setStatus(\"completed\"));\r\n  return data;\r\n};\r\n\r\nexport const learning = async (deckId, dispatch) => {\r\n  dispatch(loadingActions.setStatus(\"pending\"));\r\n  const response = await fetch(`${urlPrefix}/api/${deckId}/learning`, {\r\n    headers: {\r\n      Authorization: localStorage.getItem(\"jwtToken\"),\r\n    },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error(\"Coult not fetch\");\r\n  }\r\n\r\n  const data = await response.json();\r\n  dispatch(cardActions.replaceCards(data));\r\n  dispatch(loadingActions.setStatus(\"completed\"));\r\n\r\n  return data;\r\n};\r\n\r\nexport const learningCardNumbers = async (deckId) => {\r\n  const response = await fetch(`${urlPrefix}/api/${deckId}/learning/numbers`, {\r\n    headers: {\r\n      Authorization: localStorage.getItem(\"jwtToken\"),\r\n    },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error(\"Coult not fetch\");\r\n  }\r\n\r\n  const data = await response.json();\r\n\r\n  return data;\r\n};\r\n\r\nexport const deleteCard = async (deckId, cardId, dispatch, history) => {\r\n  if (window.confirm(\"Are you sure you want to delete this card?\")) {\r\n    await fetch(`${urlPrefix}/api/${deckId}/cards/${cardId}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Authorization: localStorage.getItem(\"jwtToken\"),\r\n      },\r\n    });\r\n\r\n    dispatch(cardActions.deleteCard(cardId));\r\n\r\n    history.push(\"/decks\");\r\n  }\r\n};\r\n","import { Fragment, useRef, useState } from \"react\";\r\nimport DeckSelect from \"./DeckSelect\";\r\nimport classes from \"./UploadCards.module.css\";\r\nimport { uploadFile } from \"../../actions/cardActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { errorActions } from \"../../store/error-slice\";\r\n\r\nconst UploadCards = (props) => {\r\n  const actualBtn = useRef();\r\n  const fileChosenRef = useRef();\r\n  const deckSelectRef = useRef();\r\n  const [selectedFileName, setSelectedFileName] = useState();\r\n  const [theFile, setTheFile] = useState();\r\n  const dispatch = useDispatch();\r\n\r\n  const errors = useSelector((state) => state.error.errors);\r\n\r\n  let deckError;\r\n  let fileError;\r\n\r\n  if (errors) {\r\n    if (errors.uploadDeckError) {\r\n      deckError = (\r\n        <p className={`${classes.message} ${classes[\"error-message\"]}`}>\r\n          {errors.uploadDeckError}\r\n        </p>\r\n      );\r\n    }\r\n\r\n    if (errors.fileError) {\r\n      fileError = (\r\n        <p className={`${classes.message} ${classes[\"error-message\"]}`}>\r\n          {errors.fileError}\r\n        </p>\r\n      );\r\n    }\r\n  }\r\n\r\n  const fileSelectionHandler = (e) => {\r\n    let fileName = e.target.files[0].name;\r\n\r\n    if (fileName.length > 14) {\r\n      const beginning = fileName.substring(0, 10);\r\n      const middle = \"... \";\r\n      const end = fileName.substring(fileName.length - 4);\r\n\r\n      fileName = beginning.concat(middle).concat(end);\r\n    }\r\n\r\n    setSelectedFileName(fileName);\r\n    setTheFile(e.target.files[0]);\r\n  };\r\n\r\n  const setErrorMessage = () => {\r\n    const selectedDeckId = deckSelectRef.current.value();\r\n    let resetError;\r\n\r\n    if (selectedDeckId === \"not-selected\" && !selectedFileName) {\r\n      dispatch(\r\n        errorActions.setError({\r\n          uploadDeckError: \"Deck must be selected\",\r\n          fileError: \"Select a text file\",\r\n        })\r\n      );\r\n\r\n      resetError = true;\r\n    } else if (selectedDeckId === \"not-selected\") {\r\n      dispatch(\r\n        errorActions.setError({\r\n          uploadDeckError: \"Deck must be selected\",\r\n        })\r\n      );\r\n      resetError = true;\r\n    } else if (!selectedFileName) {\r\n      dispatch(\r\n        errorActions.setError({\r\n          fileError: \"Select a text file\",\r\n        })\r\n      );\r\n      resetError = true;\r\n    }\r\n\r\n    if (resetError) {\r\n      setTimeout(() => {\r\n        dispatch(errorActions.setError(null));\r\n      }, 3000);\r\n\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const uploadFromFileHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const hasError = setErrorMessage();\r\n\r\n    if (hasError) {\r\n      return;\r\n    }\r\n\r\n    if (selectedFileName.substring(selectedFileName.length - 4) !== \".txt\") {\r\n      props.setResponseMessage(\"Only .txt file is allowed\", \"error\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", theFile);\r\n\r\n    uploadFile(deckSelectRef.current.value(), formData, dispatch).then((res) =>\r\n      props.setResponseMessage(res, \"success\")\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className={classes.title}>Add from text file</h1>\r\n      <h2 className={classes[\"upload-info\"]}>Front and back must be separated with tabulator.</h2>\r\n\r\n      <form className={classes[\"upload-form\"]} onSubmit={uploadFromFileHandler}>\r\n        {deckError && deckError}\r\n        <DeckSelect ref={deckSelectRef} />\r\n\r\n        {fileError && fileError}\r\n        <div className={classes[\"input-group\"]}>\r\n          <input\r\n            onChange={fileSelectionHandler}\r\n            type=\"file\"\r\n            accept=\".txt\"\r\n            id=\"actual-btn\"\r\n            ref={actualBtn}\r\n            name=\"file\"\r\n            hidden\r\n          />\r\n          <label htmlFor=\"actual-btn\">Choose File</label>\r\n          <span className={classes[\"file-chosen\"]} ref={fileChosenRef}>\r\n            {selectedFileName ? selectedFileName : \"No file chosen\"}\r\n          </span>\r\n        </div>\r\n\r\n        <button type=\"submit\">Upload</button>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UploadCards;\r\n","import classes from \"./LoadingSpinner.module.css\";\r\n\r\nconst LoadingSpinner = (props) => {\r\n  const size = props.size;\r\n\r\n  const centerClasses = `${classes.center} ${classes[`center-${size}`]}`;\r\n  const ringClasses = `${classes.ring} ${classes[`ring-${size}`]}`;\r\n  const spanClasses = `${classes[`text-${size}`]}`;\r\n\r\n  return (\r\n    <div className={centerClasses} style={{ margin: `${props.margin || 0}rem 0` }}>\r\n      <div className={ringClasses}></div>\r\n      {props.size !== \"small\" && (\r\n        <span className={spanClasses}>loading...</span>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import { Fragment, useEffect, useState } from \"react\";\r\nimport AddSingleCard from \"../components/Cards/AddSingleCard\";\r\nimport UploadCards from \"../components/Cards/UploadCards\";\r\nimport classes from \"./AddCard.module.css\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createCard, getSingleCard } from \"../actions/cardActions\";\r\nimport { updateExistingCard } from \"../actions/cardActions\";\r\nimport ChangeTitle from \"./title/ChangeTitle\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\n\r\nconst AddCard = () => {\r\n  const decks = useSelector((state) => state.deck.decks);\r\n  const [showMessage, setShowMessage] = useState(false);\r\n  const [message, setMessage] = useState();\r\n  const [clear, setClear] = useState(false);\r\n\r\n  const [showUploadMessage, setShowUploadMessage] = useState();\r\n  const [uploadMessage, setUploadMessage] = useState();\r\n  const [existingCard, setExistingCard] = useState();\r\n  const dispatch = useDispatch();\r\n  const { cardId } = useParams();\r\n  const history = useHistory();\r\n\r\n  const loading = useSelector((state) => state.loading.status);\r\n\r\n  let title = cardId ? \"Update card\" : \"Add card\";\r\n\r\n  useEffect(() => {\r\n    if (cardId) {\r\n      getSingleCard(cardId).then((res) => setExistingCard(res));\r\n    }\r\n  }, [cardId]);\r\n\r\n  useEffect(() => {\r\n    const unlisten = history.listen((location, action) => {\r\n      // Apply route change logic, i.e. dispatch to store\r\n      setExistingCard(null);\r\n    });\r\n    return unlisten;\r\n  }, []);\r\n\r\n  const modifyClear = () => {\r\n    setClear(false);\r\n  };\r\n\r\n  const createOrUpdateSingleCard = (deckId, card) => {\r\n    if (!existingCard) {\r\n      createCard(deckId, card, dispatch).then((result) => {\r\n        if (result !== false) {\r\n          setClear(true);\r\n          setMessage({ text: \"Card Added\", status: \"success\" });\r\n          setShowMessage(true);\r\n\r\n          setTimeout(() => {\r\n            setShowMessage(false);\r\n          }, 3000);\r\n        }\r\n      });\r\n    } else {\r\n      let updatedCard = {\r\n        ...existingCard,\r\n        front: card.front,\r\n        back: card.back,\r\n      };\r\n      updateExistingCard(updatedCard, dispatch, history);\r\n    }\r\n  };\r\n\r\n  const setResponseMessage = (message, status) => {\r\n    setUploadMessage({ text: message, status: status });\r\n    setShowUploadMessage(true);\r\n\r\n    setTimeout(() => {\r\n      setShowUploadMessage(false);\r\n    }, 3000);\r\n  };\r\n\r\n  let hasDeck;\r\n\r\n  hasDeck = (\r\n    <div>\r\n      <h2 className={classes[\"no-deck-found\"]}>\r\n        You don't have any decks yet.\r\n      </h2>\r\n      <div className={classes[\"create-deck\"]}>\r\n        <Link to=\"/createDeck\">Create Deck</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      <ChangeTitle\r\n        title={!existingCard ? \"Add New Card\" : \"Update Existing Card\"}\r\n      />\r\n      {decks.length === 0 && hasDeck}\r\n      {decks.length > 0 && (\r\n        <Fragment>\r\n          {showMessage && (\r\n            <p className={`${classes.message} ${classes[message.status]}`}>\r\n              {message.text}\r\n            </p>\r\n          )}\r\n          <AddSingleCard\r\n            createCard={createOrUpdateSingleCard}\r\n            title={title}\r\n            existingCard={existingCard}\r\n            clear={clear}\r\n            modifyClear={modifyClear}\r\n          />\r\n          {showUploadMessage && (\r\n            <p className={`${classes.message} ${uploadMessage.status}`}>\r\n              {uploadMessage.text}\r\n            </p>\r\n          )}\r\n          {loading === \"pending\" && (\r\n            <LoadingSpinner size=\"medium\" margin=\"-1.5rem\" />\r\n          )}\r\n          {!cardId && <UploadCards setResponseMessage={setResponseMessage} />}\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AddCard;\r\n","import classes from \"./ShowDeck.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { learningCardNumbers } from \"../../actions/cardActions\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst ShowDeck = (props) => {\r\n  const [cards, setCards] = useState([]);\r\n  const [doneForTheDay, setDoneForTheDay] = useState(false);\r\n\r\n  if (cards) {\r\n    const noCards = cards.newCards === 0 && cards.dailyCards === 0;\r\n\r\n    if (noCards && !doneForTheDay) {\r\n      setDoneForTheDay(true);\r\n    } else if (!noCards && doneForTheDay) {\r\n      setDoneForTheDay(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    learningCardNumbers(props.deckId).then((ret) => setCards(ret));\r\n  }, []);\r\n\r\n  const deckName =\r\n    props.name.length > 20 ? props.name.substring(0, 17) + \"...\" : props.name;\r\n\r\n  return (\r\n    <div className={classes.deck}>\r\n      <p className={classes[\"deck-name\"]}>{deckName}</p>\r\n      <div className={classes[\"deck-grid\"]}>\r\n        <div className={classes[\"deck-grid-left\"]}>\r\n          <p className={classes[\"new-cards\"]}>\r\n            New: <span>{cards && cards.newCards}</span>\r\n          </p>\r\n          <p className={classes[\"review-cards\"]}>\r\n            Review: <span>{cards && cards.dailyCards}</span>\r\n          </p>\r\n          <p className={classes[\"total-cards\"]}>\r\n            Total cards: <span>{cards && cards.totalCards}</span>\r\n          </p>\r\n        </div>\r\n        {/* PointerEvents allows to disable the link if neccessary (in case of none it is disabled) */}\r\n        <div className={`${classes[\"deck-grid-right\"]} ${doneForTheDay && classes.disabled}`}>\r\n          {<Link style={{pointerEvents: !doneForTheDay ? '' : 'none'}} to={`/learning/${props.deckId}`}>Start</Link>}\r\n        </div>\r\n      </div>\r\n      <div className={classes.operations}>\r\n        <Link to=\"/addCard\" className={classes.add}>\r\n          <i className=\"fa-solid fa-circle-plus\"></i>Add card\r\n        </Link>\r\n        <Link to={`/updateDeck/${props.deckId}`} className={classes.rename}>\r\n          <i className=\"fa-solid fa-pen-to-square\"></i>Update\r\n        </Link>\r\n        <div\r\n          onClick={props.deleteDeck.bind(this, props.deckId)}\r\n          className={classes.delete}\r\n        >\r\n          <i className=\"fa-solid fa-circle-minus\"></i>Delete\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShowDeck;\r\n","import { deckActions } from \"../store/deck-slice\";\r\nimport { errorActions } from \"../store/error-slice\";\r\nimport { loadingActions } from \"../store/loading-slice\";\r\n\r\nconst urlPrefix = \"https://springflashcardapp.herokuapp.com\";\r\n\r\nexport const createDeck = async (deck, history, dispatch) => {\r\n\r\n  dispatch(loadingActions.setStatus(\"pending\"))\r\n\r\n  let toUpdate;\r\n  if (deck.id) {\r\n    toUpdate = true;\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(`${urlPrefix}/api/decks`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(deck),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": localStorage.getItem(\"jwtToken\")\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      return await response.text().then((text) => {\r\n        throw new Error(text);\r\n      });\r\n    }\r\n\r\n    //Not adding the deck parameter, because at that point it does not have an id\r\n    const newDeck = await response.json();\r\n\r\n    if (toUpdate) {\r\n      dispatch(deckActions.updateDeck(newDeck));\r\n    } else {\r\n      dispatch(deckActions.addDeck(newDeck));\r\n    }\r\n\r\n    dispatch(errorActions.setError(null));\r\n    dispatch(loadingActions.setStatus(\"completed\"))\r\n\r\n    history.push(\"/decks\");\r\n  } catch (err) {\r\n    //Convert json to object before setting error, so the properties can be used whenever it is neccessary\r\n    dispatch(errorActions.setError(JSON.parse(err.message)));\r\n    dispatch(loadingActions.setStatus(\"completed\"))\r\n\r\n    setTimeout(() => {\r\n      dispatch(errorActions.setError(null));\r\n    }, 3000);\r\n  }\r\n};\r\n\r\nexport const getDecks = async (dispatch) => {\r\n  dispatch(loadingActions.setStatus(\"pending\"))\r\n  const response = await fetch(`${urlPrefix}/api/decks`, {\r\n    headers: {\r\n      \"Authorization\": localStorage.getItem(\"jwtToken\")\r\n    },\r\n  });\r\n  \r\n  const data = await response.json();\r\n  \r\n  dispatch(deckActions.replaceDeck(data));\r\n  dispatch(loadingActions.setStatus(\"completed\"))\r\n\r\n  return data;\r\n};\r\n\r\nexport const getSingleDeck = async (deckId) => {\r\n  const response = await fetch(`${urlPrefix}/api/decks/${deckId}`, {\r\n    headers: {\r\n      \"Authorization\": localStorage.getItem(\"jwtToken\")\r\n    },\r\n  });\r\n\r\n  const data = await response.json();\r\n  \r\n  return data;\r\n};\r\n\r\nexport const deleteDeck = async (dispatch, deckId) => {\r\n  if (window.confirm(\"Are you sure you want to delete this deck?\")) {\r\n    await fetch(`${urlPrefix}/api/decks/${deckId}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Authorization\": localStorage.getItem(\"jwtToken\")\r\n      },\r\n    });\r\n\r\n    dispatch(deckActions.deleteDeck(deckId));\r\n  }\r\n};\r\n","import { Fragment } from \"react\";\r\nimport ShowDeck from \"../components/Decks/ShowDeck\";\r\nimport classes from \"./Decks.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteDeck } from \"../actions/deckActions\";\r\nimport ChangeTitle from \"./title/ChangeTitle\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\n\r\nconst Decks = () => {\r\n  const dispatch = useDispatch();\r\n  const decks = useSelector((state) => state.deck.decks);\r\n  const loading = useSelector((state) => state.loading.status);\r\n\r\n  let noDecks = (\r\n    <h2 className={classes[\"no-deck-found\"]}>You don't have any decks yet.</h2>\r\n  );\r\n\r\n  const removeDeck = (deckId) => {\r\n    deleteDeck(dispatch, deckId);\r\n  };\r\n\r\n  const displayDecks = decks.map((deck) => (\r\n    <ShowDeck\r\n      key={deck.id}\r\n      deckId={deck.id}\r\n      name={deck.deckName}\r\n      newCards={deck.dailyCards - deck.completedCardsForTheDay}\r\n      reviewCards={134}\r\n      totalCards={deck.cards.length > 0 ? deck.cards.length : 0}\r\n      deleteDeck={removeDeck}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading === \"pending\" && <LoadingSpinner size=\"large\" margin=\"6\"/>}\r\n      <ChangeTitle title=\"Your Decks\" />\r\n      {decks.length === 0 && noDecks}\r\n      {decks.length > 0 && <h1>Your Decks</h1>}\r\n\r\n      <div className={classes.decks}>{displayDecks}</div>\r\n\r\n      <div className={classes[\"create-deck\"]}>\r\n        <Link to=\"/createDeck\">Create Deck</Link>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Decks;\r\n","import { Link } from \"react-router-dom\";\r\nimport classes from \"./SearchResult.module.css\";\r\nimport { useRef } from \"react\";\r\n\r\nconst SearchResult = (props) => {\r\n  const frontRef = useRef();\r\n  const backRef = useRef();\r\n\r\n  const copyToClipboardHandler = (isFront) => {\r\n    if (isFront) {\r\n      navigator.clipboard.writeText(props.front);\r\n    } else {\r\n      navigator.clipboard.writeText(props.back);\r\n    }\r\n\r\n    props.displayCopyMessage();\r\n  };\r\n\r\n  return (\r\n    <div className={classes.card}>\r\n      <p className={classes[\"number-of-result\"]}>{props.result}. </p>\r\n      <p className={classes.front} ref={frontRef}>\r\n        {props.front}\r\n      </p>\r\n      <i\r\n        className={`fa-solid fa-copy ${classes.copy}`}\r\n        onClick={copyToClipboardHandler.bind(this, true)}\r\n        title=\"Copy\"\r\n      ></i>\r\n      <p> / </p>\r\n      <p className={classes.back} ref={backRef}>\r\n        {props.back}\r\n      </p>\r\n      <i\r\n        className={`fa-solid fa-copy ${classes.copy}`}\r\n        onClick={copyToClipboardHandler.bind(this, false)}\r\n        title=\"Copy\"\r\n      ></i>\r\n      <div className={classes.modify}>\r\n        <Link to={`/${props.deckId}/updateCard/${props.id}`}>\r\n          <i className={\"fa-solid fa-pen-to-square\"} title=\"Update\"></i>\r\n        </Link>\r\n        <div onClick={props.delete.bind(this, props.deckId, props.id)}>\r\n          <i className={\"fa-solid fa-circle-minus\"} title=\"Delete\"></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResult;\r\n","import { Fragment, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SearchResult from \"../components/Cards/SearchResult\";\r\nimport classes from \"./Search.module.css\";\r\nimport { search, deleteCard } from \"../actions/cardActions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ChangeTitle from \"./title/ChangeTitle\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\n\r\nconst Search = () => {\r\n  const [cards, setCards] = useState(\"initial\");\r\n  const [showCopyMessage, setShowCopyMessage] = useState(false);\r\n  const decks = useSelector((state) => state.deck.decks);\r\n  const loading = useSelector((state) => state.loading.status);\r\n  const error = useSelector((state) => state.error.errors);\r\n  const [disabled, setDisabled] = useState(false);\r\n\r\n  if (decks.length === 0 && !disabled) {\r\n    setDisabled(true);\r\n  }\r\n\r\n  if (decks.length > 0 && disabled) {\r\n    setDisabled(false);\r\n  }\r\n\r\n  const inputRef = useRef();\r\n  const selectRef = useRef();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const deckOptions = decks.map((deck) => (\r\n    <option value={deck.id} key={deck.id}>\r\n      {deck.deckName.length > 10\r\n        ? deck.deckName.substring(0, 7) + \"...\"\r\n        : deck.deckName}\r\n    </option>\r\n  ));\r\n\r\n  const searchHandler = (e) => {\r\n    e.preventDefault();\r\n    const selectedDeckId = selectRef.current.value;\r\n    const searchPattern = inputRef.current.value;\r\n\r\n    search(selectedDeckId, searchPattern, dispatch).then((result) =>\r\n      setCards(result)\r\n    );\r\n  };\r\n\r\n  const removeCard = (deckId, cardId) => {\r\n    deleteCard(deckId, cardId, dispatch, history);\r\n  };\r\n\r\n  const displayCopyMessage = () => {\r\n    setShowCopyMessage(true);\r\n\r\n    setTimeout(() => {\r\n      setShowCopyMessage(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const resultCards =\r\n    cards === \"initial\"\r\n      ? \"\"\r\n      : cards.map((card, index) => (\r\n          <SearchResult\r\n            key={card.id}\r\n            id={card.id}\r\n            result={index + 1}\r\n            front={card.front}\r\n            back={card.back}\r\n            deckId={card.theDeckId}\r\n            delete={removeCard}\r\n            displayCopyMessage={displayCopyMessage}\r\n          />\r\n        ));\r\n\r\n  return (\r\n    <Fragment>\r\n      <ChangeTitle title=\"Search For Cards\" />\r\n      {showCopyMessage && (\r\n        <p className={classes[\"copy-message\"]}>Sentence Copied</p>\r\n      )}\r\n      <div className={classes.top}>\r\n        <h1>Search</h1>\r\n\r\n        {disabled && <p className={classes.notification}>You don't have any decks to search in. Create a new deck beforehand.</p>}\r\n        <form onSubmit={searchHandler} className={classes.search}>\r\n          <input ref={inputRef} type=\"text\" placeholder=\"Search\" />\r\n\r\n          <select name=\"\" id=\"\" ref={selectRef}>\r\n            <option value=\"0\" selected>\r\n              All Decks\r\n            </option>\r\n            {deckOptions}\r\n          </select>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            disabled={disabled}\r\n            className={disabled ? classes.disabled : \"\"}\r\n          >\r\n            Search\r\n          </button>\r\n        </form>\r\n\r\n        {loading === \"pending\" && <LoadingSpinner size=\"large\" margin=\"2.5\" />}\r\n\r\n        {cards !== \"initial\" && cards.length === 0 && loading !== \"pending\" && (\r\n          <h2 className={classes[\"no-search-result\"]}>\r\n            No results were retured.\r\n          </h2>\r\n        )}\r\n\r\n        <div className={classes[\"search-result\"]}>\r\n          {cards.length > 1 && cards !== \"initial\" && loading !== \"pending\" && (\r\n            <h2 className={classes[\"total-results\"]}>\r\n              Results: {cards.length}\r\n            </h2>\r\n          )}\r\n          {cards.length === 1 && (\r\n            <h2 className={classes[\"total-results\"]}>Result: {cards.length}</h2>\r\n          )}\r\n          {cards.length > 0 && loading !== \"pending\" && resultCards}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import { Fragment, useRef } from \"react\";\r\nimport ChangeTitle from \"./title/ChangeTitle\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { updateUser } from \"../actions/userActions\";\r\nimport { securityActions } from \"../store/security-slice\";\r\n\r\nimport classes from \"./UserPage.module.css\";\r\n\r\nconst UserPage = () => {\r\n  const usernameRef = useRef();\r\n  const passwordRef = useRef();\r\n  const confirmPasswordRef = useRef();\r\n\r\n  const dispatch = useDispatch();\r\n  const errors = useSelector((state) => state.error.errors);\r\n  const user = useSelector((state) => state.security.user)\r\n  const notification = useSelector((state) => state.security.notification)\r\n\r\n  let userNameError;\r\n  let passwordError;\r\n  let confirmPasswordError;\r\n\r\n  let notificationMessage;\r\n\r\n  if (errors) {\r\n    if (errors.username) {\r\n      userNameError = <p className={classes.message}>{errors.username}</p>;\r\n    }\r\n    if (errors.password) {\r\n      passwordError = <p className={classes.message}>{errors.password}</p>;\r\n    }\r\n    if (errors.confirmPassword) {\r\n      confirmPasswordError = (\r\n        <p className={classes.message}>{errors.confirmPassword}</p>\r\n      );\r\n    }\r\n  }\r\n\r\n  if(notification){\r\n    notificationMessage = <p className={classes.notification}>{notification}</p>;\r\n    usernameRef.current.value = \"\";\r\n    passwordRef.current.value = \"\";\r\n    confirmPasswordRef.current.value = \"\";\r\n  }\r\n\r\n  const updateHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if(usernameRef.current.value.trim() === \"\" && passwordRef.current.value.trim() === \"\" && confirmPasswordRef.current.value.trim() === \"\"){\r\n      dispatch(securityActions.setNotification(\"All fields are empty\"))\r\n\r\n      setTimeout(() => {\r\n        dispatch(securityActions.setNotification())\r\n      }, 3000)\r\n\r\n      return;\r\n    }\r\n\r\n    const newUser = {\r\n      id: user.id,\r\n      username: usernameRef.current.value,\r\n      password: passwordRef.current.value,\r\n      confirmPassword: confirmPasswordRef.current.value,\r\n    };\r\n\r\n    updateUser(newUser, dispatch)\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <ChangeTitle title=\"Change Your Settings\" />\r\n      <h1 className={classes.title}>Settings</h1>\r\n      {notificationMessage && notificationMessage}\r\n\r\n      <form onSubmit={updateHandler} className={classes[\"user-form\"]}>\r\n        {userNameError && userNameError}\r\n        <div className={classes[\"input-group\"]}>\r\n          <input type=\"text\" ref={usernameRef} name=\"\" placeholder=\"New email address\" className={userNameError ? classes.error : \"\"} />\r\n        </div>\r\n        {passwordError && passwordError}\r\n        <div className={classes[\"input-group\"]}>\r\n          <input type=\"password\" ref={passwordRef} name=\"\" placeholder=\"New password\" className={passwordError ? classes.error : \"\"} />\r\n        </div>\r\n        {confirmPasswordError && confirmPasswordError}\r\n        <div className={classes[\"input-group\"]}>\r\n          <input type=\"password\" ref={confirmPasswordRef} name=\"\" placeholder=\"Confirm new password\" className={confirmPasswordError ? classes.error : \"\"} />\r\n        </div>\r\n\r\n        <button type=\"submit\">Change</button>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UserPage;\r\n","import { useState } from \"react\";\r\nimport classes from \"./CardDetails.module.css\";\r\n\r\nconst CardDetails = (props) => {\r\n  const [showAnswer, setShowAnswer] = useState(false);\r\n\r\n  if(!props.showBack && showAnswer){\r\n    setShowAnswer(false)\r\n  }\r\n\r\n  const showAnswerHandler = () => {\r\n    setShowAnswer(true);\r\n    props.showRating();\r\n  };\r\n\r\n  return (\r\n    <div className={classes.card}>\r\n      <p className={classes.front}>\r\n        {props.currentCard && props.currentCard.front}\r\n      </p>\r\n\r\n      {!showAnswer && (\r\n        <div onClick={showAnswerHandler} className={classes[\"show-answer\"]}>\r\n          Show Answer\r\n        </div>\r\n      )}\r\n\r\n      {showAnswer && (\r\n        <p className={classes.end}>\r\n          {props.currentCard && props.currentCard.back}\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardDetails;\r\n","import classes from \"./DeckDetails.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst DeckDetails = (props) => {\r\n  const theDeck = props.deck;\r\n\r\n  const deckName =\r\n    theDeck.deckName.length > 20\r\n      ? theDeck.deckName.substring(0, 17) + \"...\"\r\n      : theDeck.deckName;\r\n\r\n  return (\r\n    <div className={classes[\"info-grid\"]}>\r\n      <h2 className={classes[\"deck-name\"]}>\r\n        Current deck: <span>{deckName}</span>\r\n      </h2>\r\n\r\n      <div className={classes[\"edit-card\"]}>\r\n        {props.currentCard && <Link to={`/${theDeck.id}/updateCard/${props.currentCard.id}`}>Edit card</Link>}\r\n      </div>\r\n\r\n      <div className={classes[\"card-details\"]}>\r\n        <p className={classes.new}>New: {props.newCards.length}</p>\r\n        <p className={classes.learning}>Learning: {props.inProgressCards.length}</p>\r\n        <p className={classes.review}>Review: {props.reviewCards.length}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeckDetails;\r\n","import classes from \"./RateAnswer.module.css\";\r\n\r\nconst formatDays = (days) => {\r\n  if (days < 30) {\r\n    return {\r\n      value: days,\r\n      suffix: \"days\",\r\n    };\r\n  }\r\n\r\n  if (days < 365) {\r\n    return {\r\n      value: parseFloat(((days / 365) * 12).toFixed(1)),\r\n      suffix: \"mon\",\r\n    };\r\n  }\r\n\r\n  return {\r\n    value: parseFloat((days / 365).toFixed(1)),\r\n    suffix: \"y\",\r\n  };\r\n};\r\n\r\nconst RateAnswer = (props) => {\r\n  const hardReviewDays = formatDays(props.currentCard.hardReview);\r\n  const mediumReviewDays = formatDays(props.currentCard.mediumReview);\r\n  const easyReviewDays = formatDays(props.currentCard.easyReview);\r\n\r\n  const calculateNewTimeHandler = (difficulty) => {\r\n    props.hideRating();\r\n\r\n    props.sendLearnedCard(difficulty);\r\n  };\r\n\r\n  return (\r\n    <div className={classes[\"rate-answer\"]}>\r\n      {/* \"<\" to not interpret as calculation */}\r\n      <p\r\n        onClick={calculateNewTimeHandler.bind(this, \"Again\")}\r\n        className={classes.again}\r\n      >\r\n        Again ({\"<\"}5 min)\r\n      </p>\r\n      <p\r\n        onClick={calculateNewTimeHandler.bind(this, \"Hard\")}\r\n        className={classes.hard}\r\n      >\r\n        {`Hard (${hardReviewDays.value}${hardReviewDays.suffix})`}\r\n      </p>\r\n      <p\r\n        onClick={calculateNewTimeHandler.bind(this, \"Medium\")}\r\n        className={classes.medium}\r\n      >\r\n        {`Medium (${mediumReviewDays.value}${mediumReviewDays.suffix})`}\r\n      </p>\r\n      <p\r\n        onClick={calculateNewTimeHandler.bind(this, \"Easy\")}\r\n        className={classes.easy}\r\n      >\r\n        {`Easy (${easyReviewDays.value}${easyReviewDays.suffix})`}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RateAnswer;\r\n","import { Fragment, useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport CardDetails from \"../components/Learning/CardDetails\";\r\nimport DeckDetails from \"../components/Learning/DeckDetails\";\r\nimport RateAnswer from \"../components/Learning/RateAnswer\";\r\nimport ChangeTitle from \"./title/ChangeTitle\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { learning, updateLearnedCard } from \"../actions/cardActions\";\r\n\r\nlet helper = false\r\n\r\nconst Learning = () => {\r\n  const params = useParams();\r\n  const [showRating, setShowRating] = useState(false);\r\n  const decks = useSelector((state) => state.deck.decks);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory()\r\n\r\n  const deckId = params.deckId;\r\n\r\n  const cards = useSelector(state => state.card.cards);\r\n\r\n  if(cards.length == 0 && helper){\r\n    history.replace(\"/decks\")\r\n    helper = false\r\n  }\r\n\r\n  const currentDeck = decks.find((deck) => deck.id == deckId);\r\n\r\n  useEffect(() => {\r\n    learning(deckId, dispatch);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const unlisten = history.listen((location, action) => {\r\n      console.log(\"Route changed\", { location, action });\r\n      // Apply route change logic, i.e. dispatch to store\r\n      helper = true\r\n    });\r\n    return unlisten;\r\n  }, []);\r\n\r\n  const showRatingHandler = () => {\r\n    setShowRating(true);\r\n  };\r\n\r\n  const hideRatingHandler = () => {\r\n    setShowRating(false);\r\n  };\r\n\r\n  const newCards = cards.filter((card) => card.cardStatus === 0);\r\n  const inProgressCards = cards.filter((card) => card.cardStatus === 1);\r\n  const reviewCards = cards.filter((card) => card.cardStatus === 2);\r\n\r\n  let cardToShow;\r\n  if (reviewCards.length > 0) {\r\n    cardToShow = reviewCards[0];\r\n  } else if (newCards.length > 0) {\r\n    cardToShow = newCards[0];\r\n  } else if (inProgressCards.length > 0) {\r\n    cardToShow = inProgressCards[0];\r\n  }\r\n\r\n  helper = true\r\n\r\n  const sendLearnedCard = async (difficulty) => {\r\n    await updateLearnedCard(cardToShow, dispatch, difficulty);\r\n    await learning(deckId, dispatch);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <ChangeTitle\r\n        title={`Learning From Deck: ${currentDeck ? currentDeck.deckName : \"\"}`}\r\n      />\r\n      {currentDeck && (\r\n        <DeckDetails\r\n          deck={currentDeck}\r\n          cards={cards}\r\n          newCards={newCards}\r\n          inProgressCards={inProgressCards}\r\n          reviewCards={reviewCards}\r\n          currentCard={cardToShow}\r\n        />\r\n      )}\r\n      {currentDeck && (\r\n        <CardDetails\r\n          currentCard={cardToShow}\r\n          showRating={showRatingHandler}\r\n          showBack={showRating}\r\n        />\r\n      )}\r\n      {showRating && (\r\n        <RateAnswer\r\n          hideRating={hideRatingHandler}\r\n          sendLearnedCard={sendLearnedCard}\r\n          currentCard={cardToShow}\r\n        />\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Learning;\r\n","import { Fragment, useRef } from \"react\";\r\nimport classes from \"./Login.module.css\";\r\nimport ChangeTitle from \"./title/ChangeTitle\";\r\nimport { login } from \"../actions/userActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst Login = () => {\r\n  const usernameRef = useRef();\r\n  const passwordRef = useRef();\r\n\r\n  const dispatch = useDispatch();\r\n  const errors = useSelector((state) => state.error.errors);\r\n  const loggedIn = useSelector((state) => state.security.validToken);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (loggedIn) {\r\n      history.replace(\"/decks\");\r\n    }\r\n  }, []);\r\n\r\n  let userNameError;\r\n  let passwordError;\r\n\r\n  if (errors) {\r\n    if (errors.username) {\r\n      userNameError = <p className={classes.message}>{errors.username}</p>;\r\n    }\r\n    if (errors.password) {\r\n      passwordError = <p className={classes.message}>{errors.password}</p>;\r\n    }\r\n  }\r\n\r\n  const loginHandler = (e) => {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: usernameRef.current.value,\r\n      password: passwordRef.current.value,\r\n    };\r\n\r\n    login(newUser, dispatch, history);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <ChangeTitle title=\"Log In With Your Account\" />\r\n      <h1 className={classes.title}>Log In</h1>\r\n\r\n      <form onSubmit={loginHandler} className={classes[\"login-form\"]}>\r\n        {userNameError && userNameError}\r\n        <div className={classes[\"input-group\"]}>\r\n          <input\r\n            type=\"text\"\r\n            ref={usernameRef}\r\n            name=\"\"\r\n            placeholder=\"Email Address\"\r\n            className={userNameError ? classes.error : \"\"}\r\n          />\r\n        </div>\r\n        {passwordError && passwordError}\r\n        <div className={classes[\"input-group\"]}>\r\n          <input\r\n            type=\"password\"\r\n            ref={passwordRef}\r\n            name=\"\"\r\n            placeholder=\"Password\"\r\n            className={passwordError ? classes.error : \"\"}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Log In</button>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { Fragment, useRef, useEffect } from \"react\";\r\nimport classes from \"./Register.module.css\";\r\nimport ChangeTitle from \"./title/ChangeTitle\";\r\nimport { register } from \"../actions/userActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Register = () => {\r\n  const usernameRef = useRef();\r\n  const passwordRef = useRef();\r\n  const confirmPasswordRef = useRef();\r\n\r\n  const dispatch = useDispatch()\r\n  const errors = useSelector(state => state.error.errors)\r\n  const loggedIn = useSelector((state) => state.security.validToken);\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    if (loggedIn) {\r\n      history.replace(\"/decks\");\r\n    }\r\n  }, []);\r\n\r\n  let userNameError;\r\n  let passwordError;\r\n  let confirmPasswordError;\r\n\r\n  if(errors){\r\n    if(errors.username){\r\n      userNameError = <p className={classes.message}>{errors.username}</p>;\r\n    }\r\n    if(errors.password){\r\n      passwordError = <p className={classes.message}>{errors.password}</p>;\r\n    }\r\n    if(errors.confirmPassword){\r\n      confirmPasswordError = <p className={classes.message}>{errors.confirmPassword}</p>;\r\n    }\r\n  }\r\n\r\n  const registerHandler = (e) => {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: usernameRef.current.value,\r\n      password: passwordRef.current.value,\r\n      confirmPassword: confirmPasswordRef.current.value\r\n    }\r\n\r\n    register(newUser, dispatch, history);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <ChangeTitle title=\"Register Your Account\" />\r\n      <h1 className={classes.title}>Register</h1>\r\n\r\n      <form onSubmit={registerHandler} className={classes[\"register-form\"]}>\r\n        {userNameError && userNameError}\r\n        <div className={classes[\"input-group\"]}>\r\n          <input type=\"text\" ref={usernameRef} name=\"\" placeholder=\"Email Address\" className={userNameError ? classes.error : \"\"} />\r\n        </div>\r\n        {passwordError && passwordError}\r\n        <div className={classes[\"input-group\"]}>\r\n          <input type=\"password\" ref={passwordRef} name=\"\" placeholder=\"Password\" className={passwordError ? classes.error : \"\"} />\r\n        </div>\r\n        {confirmPasswordError && confirmPasswordError}\r\n        <div className={classes[\"input-group\"]}>\r\n          <input type=\"password\" ref={confirmPasswordRef} name=\"\" placeholder=\"Confirm Password\" className={confirmPasswordError ? classes.error : \"\"} />\r\n        </div>\r\n        <button type=\"submit\">Sign Up</button>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import { Fragment, useRef, useState } from \"react\";\r\nimport classes from \"./CreateDeck.module.css\";\r\nimport { createDeck } from \"../actions/deckActions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ChangeTitle from \"./title/ChangeTitle\";\r\n\r\nconst CreateDeck = (props) => {\r\n  const nameRef = useRef();\r\n  const cardNumberRef = useRef();\r\n  const [cardNumber, setCardNumber] = useState(20);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const errors = useSelector((state) => state.error.errors);\r\n\r\n  const createDeckHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    let cards = cardNumber;\r\n\r\n    if (cards === \"\") {\r\n      cards = 20;\r\n    }\r\n\r\n    let newDeck = {\r\n      deckName: nameRef.current.value,\r\n      dailyCards: cards,\r\n    };\r\n\r\n    createDeck(newDeck, history, dispatch);\r\n  };\r\n\r\n  const changeCardNumberHandler = () => {\r\n    setCardNumber(cardNumberRef.current.value);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <ChangeTitle title=\"Create New Deck\" />\r\n      <h1>{props.title}</h1>\r\n      {errors && (\r\n        <p className={`${classes.message} error`}>{errors.deckName}</p>\r\n      )}\r\n\r\n      <form onSubmit={createDeckHandler} className={classes[\"deck-form\"]}>\r\n        <div className={classes[\"deck-creation\"]}>\r\n          <div className={`${classes[\"input-group\"]} ${classes.left}`}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"\"\r\n              ref={nameRef}\r\n              placeholder=\"Deck name\"\r\n              className={errors ? classes.error : \"\"}\r\n            />\r\n          </div>\r\n\r\n          <div className={`${classes[\"input-group\"]} ${classes.right}`}>\r\n            <input\r\n              type=\"text\"\r\n              ref={cardNumberRef}\r\n              placeholder=\"Daily cards\"\r\n              onChange={changeCardNumberHandler}\r\n              value={cardNumber}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"submit\">{props.title}</button>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateDeck;\r\n","import { Fragment, useEffect, useRef, useState } from \"react\";\r\nimport { createDeck, getSingleDeck } from \"../actions/deckActions\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ChangeTitle from \"./title/ChangeTitle\";\r\n\r\nimport classes from \"./CreateDeck.module.css\";\r\n\r\nconst UpdateDeck = (props) => {\r\n  const nameRef = useRef();\r\n  const cardNumberRef = useRef();\r\n  const [cardNumber, setCardNumber] = useState(-1);\r\n  const [name, setName] = useState(\"\");\r\n  const [existingDeck, setExistingDeck] = useState();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n\r\n  const errors = useSelector((state) => state.error.errors);\r\n\r\n  useEffect(() => {\r\n    const getDeck = async () => {\r\n      const res = await getSingleDeck(params.deckId);\r\n      return res;\r\n    };\r\n    getDeck().then((result) => setExistingDeck(result));\r\n  }, []);\r\n\r\n  if (existingDeck && cardNumber < 0) {\r\n    setCardNumber(existingDeck.dailyCards);\r\n    setName(existingDeck.deckName);\r\n  }\r\n\r\n  const updateCardHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    let cards = cardNumber;\r\n\r\n    if (cards === \"\") {\r\n      cards = 20;\r\n    }\r\n\r\n    let newDeck = {\r\n      id: params.deckId,\r\n      deckName: nameRef.current.value,\r\n      dailyCards: cards,\r\n      completedCardsForTheDay: existingDeck.completedCardsForTheDay,\r\n    };\r\n\r\n    createDeck(newDeck, history, dispatch);\r\n  };\r\n\r\n  const changeCardNumberHandler = () => {\r\n    setCardNumber(cardNumberRef.current.value);\r\n  };\r\n\r\n  const changeNameHandler = () => {\r\n    setName(nameRef.current.value);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <ChangeTitle\r\n        title={`Update Deck: ${\r\n          existingDeck ? existingDeck.deckName : \"\"\r\n        }`}\r\n      />\r\n      <h1>{props.title}</h1>\r\n      {errors && (\r\n        <p className={`${classes.message} error`}>{errors.deckName}</p>\r\n      )}\r\n\r\n      <form onSubmit={updateCardHandler} className={classes[\"deck-form\"]}>\r\n        <div className={classes[\"deck-creation\"]}>\r\n          <div className={`${classes[\"input-group\"]} ${classes.left}`}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"\"\r\n              ref={nameRef}\r\n              placeholder=\"Deck name\"\r\n              onChange={changeNameHandler}\r\n              value={name}\r\n              className={errors ? classes.error : \"\"}\r\n            />\r\n          </div>\r\n\r\n          <div className={`${classes[\"input-group\"]} ${classes.right}`}>\r\n            <input\r\n              type=\"text\"\r\n              ref={cardNumberRef}\r\n              placeholder=\"Daily cards\"\r\n              onChange={changeCardNumberHandler}\r\n              value={cardNumber}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"submit\">{props.title}</button>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UpdateDeck;\r\n","import { Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nconst SecuredRoute = (props) => {\r\n  const loggedIn = useSelector((state) => state.security.validToken);\r\n\r\n  if (!loggedIn) {\r\n    return <Redirect to=\"/login\" />;\r\n  } else {\r\n    return <Route path={props.path}>{props.children}</Route>;\r\n  }\r\n};\r\n\r\nexport default SecuredRoute;\r\n","import classes from \"./NotFound.module.css\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <h1 className={classes.status}>404</h1>\r\n      <p className={classes.text}>The requested page could not be found.</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import { Route, Switch } from \"react-router-dom\";\nimport Landing from \"./pages/Landing\";\nimport Layout from \"./components/Layouts/Layout\";\nimport AddCard from \"./pages/AddCard\";\nimport Decks from \"./pages/Decks\";\nimport Search from \"./pages/Search\";\nimport UserPage from \"./pages/UserPage\";\nimport Learning from \"./pages/Learning\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport CreateDeck from \"./pages/CreateDeck\";\nimport UpdateDeck from \"./pages/UpdateDeck\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { getDecks } from \"./actions/deckActions\";\nimport jwt_decode from \"jwt-decode\";\nimport { securityActions } from \"./store/security-slice\";\nimport { logout } from \"./actions/userActions\";\nimport SecuredRoute from \"./components/Security/SecuredRoute\"\nimport NotFound from \"./pages/exception/NotFound\";\n\nfunction App() {\n\n  const dispatch = useDispatch();\n  const loggedIn = useSelector((state) => state.security.validToken);\n\n  const jwtToken = localStorage.jwtToken;\n\n  if (jwtToken) {\n    const decoded_jwtToken = jwt_decode(jwtToken);\n\n    dispatch(securityActions.setUser(decoded_jwtToken));\n\n    const currentTime = Date.now() / 1000;\n    if (decoded_jwtToken.exp < currentTime) {\n      logout(dispatch);\n      window.location.href = \"/\";\n    }\n  }\n\n  useEffect(() => {\n    if (loggedIn) {\n      getDecks(dispatch);\n    }\n  }, [loggedIn]);\n\n  return (\n    <Layout>\n      <div className=\"container\">\n        <Switch>\n          <Route path=\"/\" exact>\n            <Landing />\n          </Route>\n          <SecuredRoute path=\"/addCard\" key={window.location.pathname}>\n            <AddCard />\n          </SecuredRoute>\n          <SecuredRoute\n            path=\"/:deckId/updateCard/:cardId\"\n            key={window.location.pathname}\n          >\n            <AddCard />\n          </SecuredRoute>\n          <SecuredRoute path=\"/decks\">\n            <Decks />\n          </SecuredRoute>\n          <SecuredRoute path=\"/createDeck\" exact>\n            <CreateDeck title=\"Create Deck\" />\n          </SecuredRoute>\n          <SecuredRoute path=\"/updateDeck/:deckId\">\n            <UpdateDeck title=\"Update Deck\" />\n          </SecuredRoute>\n          <SecuredRoute path=\"/search\">\n            <Search />\n          </SecuredRoute>\n          <SecuredRoute path=\"/user\">\n            <UserPage />\n          </SecuredRoute>\n          <SecuredRoute path=\"/learning/:deckId\">\n            <Learning />\n          </SecuredRoute>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/register\">\n            <Register />\n          </Route>\n          <Route path=\"*\">\n            <NotFound />\n          </Route>\n        </Switch>\n      </div>\n    </Layout>\n  );\n}\n \nexport default App;\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst ScrollToTop = () => {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default ScrollToTop;\r\n","import ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/index\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport ScrollToTop from \"./components/Layouts/ScrollToTop\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <ScrollToTop />\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}